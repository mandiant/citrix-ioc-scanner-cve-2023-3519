# Copyright 2023 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# FreeBSD/NetScaler bash doesn't support array declaration shortcut
# so we create the array by hand... I'm sorry.
declare -a shell_history_denylist;
# From CISA https://www.cisa.gov/news-events/cybersecurity-advisories/aa23-201a
shell_history_denylist[0]="whoami$";
shell_history_denylist[1]="cat /flash/nsconfig/keys";
shell_history_denylist[2]="ldapsearch";
shell_history_denylist[3]="chmod +x /tmp";
shell_history_denylist[4]="openssl des3";
shell_history_denylist[5]="ping -c 1";
# From Mandiant
shell_history_denylist[6]="cp /bin/sh";
shell_history_denylist[7]="chmod +s /var";
shell_history_denylist[8]="echo <?php";


declare -a shell_history_paths;
shell_history_paths[0]="/var/log/bash.log";
shell_history_paths[1]="/var/log/notice.log";
shell_history_paths[2]="/var/log/sh.log";


scan_shell_history() {
    for path in "${shell_history_paths[@]}"; do
        if  ! compgen -G "$root_directory/$path*" >/dev/null; then
            debug "didn't find $path files";
            continue;
        fi

        local found=false;
        for re in "${shell_history_denylist[@]}"; do
            # /dev/null to ensure at least one of these files exists so zgrep doesn't fail
            local entries=$(zgrep -F "$re" "$root_directory/$path"* /dev/null);
            if [ -n "$entries" ]; then
                found=true;
                report_match "denylisted content '$re'";
                report "matches for '$re':";
                report "$entries";
                report "Please review the above shell history entries for unexpected activity.";
                report "They match signatures commonly associated with post-exploitation;"
                report "however, this may overlap with legitimate system administration."
                report "If you recognize the commands as something you typed, then you can probably ignore them."
                report "For example, reviewing '/etc/passwd' to manage users may be valid in your environment."
            fi
        done

        if [ "$found" != true ]; then
            debug "did not find denylisted content in $path";
        fi
    done
}
